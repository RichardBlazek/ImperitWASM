@inject ImperitClient http;

@using Mode = StartSwitch.Mode;

@code {
	[Parameter] public Action<Mode> Set { get; set; } = _ => { };
	ImmutableArray<int> Finished;
	Data.Int model = new Data.Int();
	ImmutableArray<Color> Colors;
	ImmutableArray<PlayersPower> Powers;
	Data.Winner? Winner = null;
	protected override async Task OnInitializedAsync() => Finished = await http.GetAsync<ImmutableArray<int>>("api/Game/Finished");
	async Task UpdateHistoryGraphs()
	{
		Colors = await http.PostAsync<int, ImmutableArray<Color>>("api/Player/Colors", Finished[model.Value]);
		Powers = await http.PostAsync<int, ImmutableArray<PlayersPower>>("api/Powers/List", Finished[model.Value]);
		Winner = await http.PostAsync<int, Data.Winner?>("api/Game/Winner", Finished[model.Value]);
	}
}
<NavMenu Options="Zpět;Historie" Selected="1" OnClick="i => { if (i == 0) { Set(Mode.Login); } }"/>
<main>
	@if (Finished.IsDefaultOrEmpty)
	{
		<p>V historii nejsou uložené žádné odehrané hry</p>
	}
	else
	{
		<EditForm Model="model" OnSubmit="UpdateHistoryGraphs">
			<DataAnnotationsValidator/><ValidationSummary/>
			<p>Hra:</p>
			<p><IntSelect @bind-Value="model.Value" Options="Finished" Name="g => g.ToString()"/></p>
			<button type="submit">Zobrazit</button>
		</EditForm>
	}
	@if (!Colors.IsDefaultOrEmpty && !Powers.IsDefaultOrEmpty && Winner is not null)
	{
		<p>Vítěz: <span style="color:@Winner.C;">@Winner.N</span></p>
		<Graphs Players="Colors" Powers="Powers"/>
	}
</main>