@page "/"

@inject ImperitClient http;
@inject SessionService cookies;

@code{
	Data.Session Session = new Data.Session();
	async Task<bool> LoginAsync(Data.Login login)
	{
		Session = await http.PostAsync<Data.Login, Data.Session>("api/Player/Login", login);
		await cookies.SetAsync(Session);
		this.StateHasChanged();
		return Session.IsSet();
	}
	async Task LogoutAsync()
	{
		if (Session.IsSet())
		{
			await http.PostAsync<Data.Session>("api/Player/Logout", Session);
			await cookies.RemoveAsync();
			Session = new Data.Session();
			this.StateHasChanged();
		}
	}
	protected override async Task OnInitializedAsync()
	{
		Session = await cookies.GetAsync();
		Session = Session.IsSet() && await http.PostAsync<Data.Session, bool>("api/Player/Correct", Session) ? Session : new Data.Session();
	}
}
@if (Session.IsSet())
{
	<GameSwitch LogoutAsync="LogoutAsync" Session="Session"/>
}
else
{
	<StartSwitch LoginAsync="LoginAsync"/>
}