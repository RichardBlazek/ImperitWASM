@page "/"

@inject ImperitClient http;
@inject SessionService cookies;

@code{
	Server.Session? Session = null;
	async Task<bool> LoginAsync(int player, int gameId, string password)
	{
		string? login = (await http.PostJsonResponseAsync<Server.Login, Server.StringValue>("api/Player/Login", new Server.Login(player, gameId, password))).Value;
		Session = login is string ? new Server.Session(player, gameId, login) : null;
		await cookies.SetAsync(Session);
		this.StateHasChanged();
		return Session != null;
	}
	async Task LogoutAsync()
	{
		if (Session != null)
		{
			await http.PostJsonAsync<Server.Session>("api/Player/Logout", Session);
			await cookies.RemoveAsync();
			Session = null;
			this.StateHasChanged();
		}
	}
	protected override async Task OnInitializedAsync()
	{
		Session = await cookies.GetAsync();
		Session = Session != null && await http.PostJsonResponseAsync<Server.Session, bool>("api/Player/Correct", Session!) ? Session : null;
	}
}
@if (Session != null)
{
	<GameSwitch LogoutAsync="LogoutAsync" Session="Session"/>
}
else
{
	<StartSwitch LoginAsync="LoginAsync"/>
}