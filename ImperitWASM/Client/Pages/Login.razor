@inject ImperitClient http;

@code{
	[Parameter] public Func<int, int, string, Task<bool>>? LoginAsync { get; set; }
	LoginModel model = new LoginModel();
	bool Wrong = false;
	async Task LoginAction()
	{
		if(!await LoginAsync!(model.Id, model.GameId, model.Password))
		{
			Wrong = true;
			model.Password = "";
		}
	}
	ImmutableDictionary<int, Client.Server.PlayerId[]>? players = null;
	int[]? games = null;
	protected override async Task OnInitializedAsync()
	{
		games = await http.GetJsonAsync<int[]?>("api/Game/Login");
		players = await http.GetJsonAsync<ImmutableDictionary<int, Client.Server.PlayerId[]>>("api/Player/Login");
	}
}
<nav><a class="this">Přihlášení</a></nav>
<main>
	@if (Wrong)
	{
		<p>Zadané heslo není správné</p>
	}
	<EditForm Model="model" OnSubmit="LoginAction">
		<DataAnnotationsValidator/><ValidationSummary/>
		<p>Hra:</p>
		@if (games != null)
		{
			<IntSelect @bind-Value="model.Id" Options="games" Id="g => g" Name="g => g.ToString()"/><br/>
		}
		<p>Hráč:</p>
		@if (players != null)
		{
			<IntSelect @bind-Value="model.Id" Options="players[model.GameId]" Id="p => p.I" Name="p => p.N"/><br/>
		}
		<p>Heslo:</p>
		<InputText type="password" @bind-Value="model.Password"/><br/>
		<button type="submit">Přihlásit se</button>
	</EditForm>
</main>