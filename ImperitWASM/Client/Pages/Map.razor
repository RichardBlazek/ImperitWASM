@code{
	[Parameter] public int Width { get; set; }
	[Parameter] public int Height { get; set; }
	[Parameter] public IReadOnlyList<Data.DisplayableShape>? Provinces { get; set; }
	[Parameter] public Color SelectedColor { get; set; } = new Color();
	[Parameter] public Func<int, int?, Task<int?>>? Select { get; set; }
	[Parameter] public int FontSize { get; set; }
	int? selected = null;
	ImmutableArray<Point>? SelectedPoints => selected is int i ? Provinces?[i].B : null;
	Country? country;
	async Task ClickSelect(int? index)
	{
		selected = index is int i ? await Select!(i, selected) : null;
		country?.Select(SelectedPoints, SelectedColor);
	}
}
<svg viewBox="0 0 @Width @Height">
	@if (Provinces is not null)
	{
		@foreach (var (i, province) in Provinces.Index())
		{
			<Country Points="province.B" Fill="province.F" Stroke="province.S" StrokeWidth="province.W" Width="Width" Height="Height" OnClick="async() => await ClickSelect(i)" />
		}
		<Country @ref="country" Points="SelectedPoints" Fill="SelectedColor" Width="Width" Height="Height" OnClick="async() => await ClickSelect(selected)" />
		@foreach (var (i, province) in Provinces.Index())
		{
			<Caption Text="@province.T" Center="province.C" Width="Width" Height="Height" FontSize="FontSize" OnClick="async() => await ClickSelect(i)" />
		}
	}
</svg>