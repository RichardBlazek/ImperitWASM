@inject ImperitClient http;

@using Mode = Data.Switch.Mode;

@code{
	[Parameter] public Action<Mode> Switch { get; set; } = (x => { });
	[Parameter] public int Land { get; set; }
	[Parameter] public Data.Session Session { get; set; } = new Data.Session();
	Data.Recruit model = new Data.Recruit();
	Data.RecruitInfo Info = new Data.RecruitInfo();
	protected override async Task OnInitializedAsync()
	{
		Info = await http.PostAsync<Data.CmdData, Data.RecruitInfo>("api/Command/RecruitInfo", new Data.CmdData(Land, Session.U, Session.G));
		System.Console.WriteLine(Info.R.Length);
		model.Soldiers = Data.Int.Array(Info.R.Length);
	}
	int Price => model.Soldiers.Zip(Info.R.Try(), (count, type) => count.Value * type.P).Sum();
	int Missing => Price - Info.M;
	async Task DoRecruit()
	{
		if (Missing <= 0 || model.Borrow)
		{
			await http.PostAsync<Data.RecruitCmd>("api/Command/Recruit", new Data.RecruitCmd(Session.U, Session.I, Land, model.Soldiers.Select(s => s.Value).ToImmutableArray(), Session.G));
			Switch(Mode.Map);
		}
	}
	SoldierTypeInfobox? infobox;
}
<nav>
	<a @onclick="() => Switch(Mode.Map)">Zrušit</a>
	<a class="this">Verbování</a>
	<a @onclick="() => Switch(Mode.Players)">@Info.M@Sym.Money</a>
</nav>
<main>
	<SoldierTypeInfobox @ref="infobox" />
	<EditForm Model="model" OnValidSubmit="DoRecruit">
		<DataAnnotationsValidator /><ValidationSummary />
		<p>
			@Info.N
			@if (!string.IsNullOrWhiteSpace(Info.S))
			{
				<text>má @Info.S</text>
			}
			else
			{
				<text>nemá žádné vojáky</text>
			}
		</p>
		<table>
			@foreach (var (i, (type, price)) in Info.R.Try().Index())
			{
				System.Console.WriteLine(i);
				<tr>
					<td>@type.Name @price@Sym.Money<sup @onclick="() => infobox?.Open(type)">?</sup></td>
					<td><InputNumber @bind-Value="model.Soldiers[i].Value" autofocus /></td>
				</tr>
			}
			@if (Missing > 0)
			{
				<tr>
					<td>Chybí ti @Missing@Sym.Money</td>
					<td>Půjčit si: <InputCheckbox @bind-Value="model.Borrow" /></td>
				</tr>
			}
			else
			{
				model.Borrow = false;
			}
			@if (Missing <= 0 || model.Borrow)
			{
				<tr><td></td><td><button type="submit">Verbovat</button></td></tr>
			}
		</table>
	</EditForm>
</main>