@inject ImperitClient http;

@using Mode = StartSwitch.Mode; 

@code{
	[Parameter] public Action<Mode> Set { get; set; } = _ => { };
	[Parameter] public Func<Data.Login, Task<bool>>? LoginAsync { get; set; }
	string Username { get; set; } = "";
	string Password { get; set; } = "";
	int? Selected = null, GameId = null;
	ImmutableArray<Data.ProvinceAppearance> Provinces;
	Color NextColor = new Color();
	Data.RegistrationErrors Error = Data.RegistrationErrors.Ok;
	Map? map;
	async Task OnSubmit()
	{
		Error = await http.PostAsync<Data.RegisteredPlayer, Data.RegistrationErrors>("api/Game/Register", new Data.RegisteredPlayer(Username, Password, Selected ?? 0, GameId ?? 0));
		if (Error == Data.RegistrationErrors.Ok)
		{
			await LoginAsync!(new Data.Login(Username, Password));
		}
		StateHasChanged();
	}
	protected override async Task OnInitializedAsync()
	{
		GameId = await http.GetAsync<int>("api/Game/RegistrableGame");
		NextColor = await http.PostAsync<int, Color>("api/Game/NextColor", GameId.Value);
		Provinces = await http.PostAsync<int, ImmutableArray<Data.ProvinceAppearance>>("api/Provinces/Shapes", GameId.Value);
	}
#pragma warning disable 1998
	async Task OnClickAsync(int i)
	{
		if (Provinces![i].R)
		{
			map?.Select(Selected = i);
		}
	}
}
<NavMenu Options="Zpět;Registrace;Potvrdit" Selected="1" OnClickAsync="async i =>
{
	if (i == 0)
	{
		Set(Mode.Login);
	}
	else if (i == 2)
	{
		await OnSubmit();
	}
}"/>
<main>
	@if (Error == Data.RegistrationErrors.InvalidStart)
	{
		<p>Musíš vybrat počáteční zemi</p>
	}
	else if (Error == Data.RegistrationErrors.NoName)
	{
		<p>Musíš zadat jméno</p>
	}
	else if (Error == Data.RegistrationErrors.NoPassword)
	{
		<p>Musíš zadat heslo</p>
	}
	else if (Error == Data.RegistrationErrors.UsedName)
	{
		<p>Zvolené jméno již používá jiný hráč</p>
	}
	<p>Jméno:</p><p><input type="text" @bind-value="Username" autocomplete="username"/></p>
	<p>Heslo:</p><p><input type="password" @bind-value="Password" autocomplete="current-password"/></p>
	<p>Vyber si zemi, kde budeš začínat:</p>
	@if (!Provinces.IsDefaultOrEmpty)
	{
		<Map @ref="map" Width="1000" Height="1000" Provinces="Provinces" SelectedColor="NextColor" OnClickAsync="OnClickAsync" FontSize="9" TextColor="p => p.GetRegistrationColor()" />
	}
</main>