@inject HttpClient http;

@code{
	[Parameter] public Func<int, string, Task<bool>>? LoginAsync { get; set; }
	bool IsRegistration = false;
	void Set(bool mode)
	{
		IsRegistration = mode;
		this.StateHasChanged();
	}
	async Task ReturnAsync()
	{
		await this.OnInitializedAsync();
		Set(false);
	}
	bool? IsActive = null;
	protected override async Task OnInitializedAsync()
	{
		IsActive = await http.GetJsonAsync<bool>("api/Game/IsActive");
	}
}
<style>
	nav > a:hover {
		background-color: #28a;
	}
	nav > a.this {
		background-color: #5ef;
		color: #000;
	}
</style>
@if (IsActive is bool isActive)
{
	if (isActive)
	{
		<Login LoginAsync="LoginAsync!"/>
	}
	else if (IsRegistration)
	{
		<Registration Return="() => Set(false)"/>
	}
	else
	{
		<BetweenGames ReturnAsync="ReturnAsync" ToRegistration="() => Set(true)"/>
	}
}