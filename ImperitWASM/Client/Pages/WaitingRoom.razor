@inject ImperitClient http;
@inject SessionStorage storage;

@code{
	[Parameter] public Game.State State { get; set; }
	[Parameter] public Func<Task>? LogoutAsync { get; set; }
	[Parameter] public System.Action Start { get; set; } = () => { };
	System.Timers.Timer Timer = new System.Timers.Timer(3000);
	string Text { get; set; } = "";
	async void UpdateAsync(object? _1 = null, object? _2 = null)
	{
		var state = await http.PostAsync<Session, Game.State>("api/Player/Correct", storage.Session);
		if (state == Game.State.Started)
		{
			Timer.Stop();
			Start();
		}
		Text = state switch
		{
			Game.State.Created => "Zatím jsi jediný zaregistrovaný hráč, počkej prosím na další",
			Game.State.CountDown => "Hra začne v " + (await http.PostAsync<int, DateTime?>("api/Game/StartTime", storage.GameId!.Value))!.Value.ToLocalTime().ToString("HH:mm:ss"),
			Game.State.Finished => "Hra již skončila, můžeš se zaregistrovat do další",
			_ => ""
		};
		StateHasChanged();
	}
	protected override void OnInitialized()
	{
		UpdateAsync();
		Timer.Elapsed += UpdateAsync;
		Timer.Start();
	}
}

<NavMenu Options="Odhlášení;Hra" Selected="1" OnClickAsync="i => i == 0 ? LogoutAsync!() : Task.Run(() => { })"/>
<main>
	@Text
</main>