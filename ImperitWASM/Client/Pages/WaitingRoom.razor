@inject ImperitClient http;
@inject SessionStorage storage;

@code{
	[Parameter] public Game.State State { get; set; }
	[Parameter] public Func<Task>? LogoutAsync { get; set; }
	[Parameter] public System.Action Start { get; set; } = () => { };
	System.Timers.Timer Timer = new System.Timers.Timer(1000);
	string Text { get; set; } = "";
	StartInfo? Info = null;
	async Task UpdateAsync()
	{
		if (Info is null || Info.S == Game.State.Created || (Info.S == Game.State.CountDown && Info.D - DateTime.UtcNow < TimeSpan.FromSeconds(2)))
		{
			Info = await http.PostAsync<int, StartInfo>("api/Game/StartInfo", storage.GameId!.Value);
		}
		if (Info.S == Game.State.Started)
		{
			Timer.Stop();
			Start();
		}
		Text = Info.S switch
		{
			Game.State.Created => "Zatím jsi jediný zaregistrovaný hráč, počkej prosím na další",
			Game.State.CountDown => "Hra začne za " + (Info.D.ToLocalTime() - DateTime.Now).ToString("mm\\:ss"),
			Game.State.Finished => "Hra již skončila, můžeš se zaregistrovat do další",
			_ => ""
		};
		StateHasChanged();
	}
	protected override async Task OnInitializedAsync()
	{
		await UpdateAsync();
		Timer.Elapsed += async (x, y) => await UpdateAsync();
		Timer.Start();
	}
}

<NavMenu Options="Odhlášení;Hra" Selected="1" OnClickAsync="i => i == 0 ? LogoutAsync!() : Task.Run(() => { })"/>
<main>
	@Text
</main>