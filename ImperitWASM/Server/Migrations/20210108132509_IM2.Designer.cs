// <auto-generated />
using System;
using ImperitWASM.Server.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImperitWASM.Server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210108132509_IM2")]
    partial class IM2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ImperitWASM.Client.Data.Session", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("P")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.HasIndex("P");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName1")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerName");

                    b.HasIndex("PlayerName1");

                    b.ToTable("Action");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Action");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Current")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Player", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.HasIndex("GameId");

                    b.HasIndex("SettingsId");

                    b.ToTable("Players");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Player");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShapeId1")
                        .HasColumnType("INTEGER");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ShapeId1");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Final")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Income")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Soldiers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Province", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerName");

                    b.HasIndex("RegionId");

                    b.HasIndex("SettingsId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Regiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ManoeuvreId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoldiersId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ManoeuvreId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SoldiersId");

                    b.HasIndex("TypeSymbol");

                    b.ToTable("Regiment");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Region", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShapeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId");

                    b.HasIndex("ShapeId")
                        .IsUnique();

                    b.ToTable("Region");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Region");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.RegionSoldierType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SoldierTypeSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("SoldierTypeSymbol");

                    b.ToTable("RegionSoldierType");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountdownSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebtLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefaultMoney")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FinalLandsCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntegerDefaultInstability")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntegerInterest")
                        .HasColumnType("INTEGER");

                    b.Property<float>("MountainsWidth")
                        .HasColumnType("REAL");

                    b.Property<int>("PlayerCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Shape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CenterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CenterId")
                        .IsUnique();

                    b.ToTable("Shape");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.SoldierType", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<int>("AttackPower")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefensePower")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Symbol");

                    b.HasIndex("SettingsId");

                    b.ToTable("SoldierType");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SoldierType");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Soldiers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Soldiers");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Loan", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Action");

                    b.Property<int>("Debt")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Loan");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Manoeuvre", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Action");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ProvinceId");

                    b.HasDiscriminator().HasValue("Manoeuvre");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Human", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Player");

                    b.Property<string>("StringPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Human");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Robot", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Player");

                    b.HasDiscriminator().HasValue("Robot");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Land", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Region");

                    b.Property<int>("Earnings")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasPort")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStart")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Land");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Mountains", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Region");

                    b.HasDiscriminator().HasValue("Mountains");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Sea", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Region");

                    b.HasDiscriminator().HasValue("Sea");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Pedestrian", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.SoldierType");

                    b.HasDiscriminator().HasValue("Pedestrian");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Ship", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.SoldierType");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Ship");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Elephant", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Pedestrian");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Elephant_Capacity");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Elephant");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.OutlandishShip", b =>
                {
                    b.HasBaseType("ImperitWASM.Shared.Data.Elephant");

                    b.HasDiscriminator().HasValue("OutlandishShip");
                });

            modelBuilder.Entity("ImperitWASM.Client.Data.Session", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Player", null)
                        .WithMany()
                        .HasForeignKey("P")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Action", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Player", null)
                        .WithMany("ActionList")
                        .HasForeignKey("PlayerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.Player", null)
                        .WithMany("Actions")
                        .HasForeignKey("PlayerName1");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Player", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.Settings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ImperitWASM.Shared.Value.Color", "Color", b1 =>
                        {
                            b1.Property<string>("PlayerName")
                                .HasColumnType("TEXT");

                            b1.Property<byte>("A")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("B")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("G")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("R")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PlayerName");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerName");
                        });

                    b.Navigation("Color")
                        .IsRequired();

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Point", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Shape", null)
                        .WithMany("Points")
                        .HasForeignKey("ShapeId1");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Province", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.Soldiers", "Soldiers")
                        .WithOne()
                        .HasForeignKey("ImperitWASM.Shared.Data.Province", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerName")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ImperitWASM.Shared.Data.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.Settings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Region");

                    b.Navigation("Settings");

                    b.Navigation("Soldiers");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Regiment", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Manoeuvre", null)
                        .WithMany("Soldiers")
                        .HasForeignKey("ManoeuvreId");

                    b.HasOne("ImperitWASM.Shared.Data.Province", null)
                        .WithMany("DefaultSoldiers")
                        .HasForeignKey("ProvinceId");

                    b.HasOne("ImperitWASM.Shared.Data.Soldiers", null)
                        .WithMany("Regiments")
                        .HasForeignKey("SoldiersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.SoldierType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Region", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Soldiers", "Soldiers")
                        .WithOne()
                        .HasForeignKey("ImperitWASM.Shared.Data.Region", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.Settings", "Settings")
                        .WithMany("RegionCollection")
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.Shape", "Shape")
                        .WithOne()
                        .HasForeignKey("ImperitWASM.Shared.Data.Region", "ShapeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Settings");

                    b.Navigation("Shape");

                    b.Navigation("Soldiers");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.RegionSoldierType", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Region", null)
                        .WithMany("RegionSoldierTypes")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Shared.Data.SoldierType", "SoldierType")
                        .WithMany()
                        .HasForeignKey("SoldierTypeSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SoldierType");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Settings", b =>
                {
                    b.OwnsOne("ImperitWASM.Shared.Value.Color", "LandColor", b1 =>
                        {
                            b1.Property<int>("SettingsId")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("A")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("B")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("G")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("R")
                                .HasColumnType("INTEGER");

                            b1.HasKey("SettingsId");

                            b1.ToTable("Settings");

                            b1.WithOwner()
                                .HasForeignKey("SettingsId");
                        });

                    b.OwnsOne("ImperitWASM.Shared.Value.Color", "MountainsColor", b1 =>
                        {
                            b1.Property<int>("SettingsId")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("A")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("B")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("G")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("R")
                                .HasColumnType("INTEGER");

                            b1.HasKey("SettingsId");

                            b1.ToTable("Settings");

                            b1.WithOwner()
                                .HasForeignKey("SettingsId");
                        });

                    b.OwnsOne("ImperitWASM.Shared.Value.Color", "SeaColor", b1 =>
                        {
                            b1.Property<int>("SettingsId")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("A")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("B")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("G")
                                .HasColumnType("INTEGER");

                            b1.Property<byte>("R")
                                .HasColumnType("INTEGER");

                            b1.HasKey("SettingsId");

                            b1.ToTable("Settings");

                            b1.WithOwner()
                                .HasForeignKey("SettingsId");
                        });

                    b.Navigation("LandColor")
                        .IsRequired();

                    b.Navigation("MountainsColor")
                        .IsRequired();

                    b.Navigation("SeaColor")
                        .IsRequired();
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Shape", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Point", "Center")
                        .WithOne()
                        .HasForeignKey("ImperitWASM.Shared.Data.Shape", "CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.SoldierType", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Settings", null)
                        .WithMany("SoldierTypeCollection")
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Manoeuvre", b =>
                {
                    b.HasOne("ImperitWASM.Shared.Data.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Player", b =>
                {
                    b.Navigation("ActionList");

                    b.Navigation("Actions");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Province", b =>
                {
                    b.Navigation("DefaultSoldiers");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Region", b =>
                {
                    b.Navigation("RegionSoldierTypes");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Settings", b =>
                {
                    b.Navigation("RegionCollection");

                    b.Navigation("SoldierTypeCollection");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Shape", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Soldiers", b =>
                {
                    b.Navigation("Regiments");
                });

            modelBuilder.Entity("ImperitWASM.Shared.Data.Manoeuvre", b =>
                {
                    b.Navigation("Soldiers");
                });
#pragma warning restore 612, 618
        }
    }
}
