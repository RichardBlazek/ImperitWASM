// <auto-generated />
using System;
using ImperitWASM.Server.Load;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImperitWASM.Server.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("EntityPlayers");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityPlayerAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Debt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityPlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityPlayerId");

                    b.ToTable("EntityPlayerAction");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityPlayerPower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Final")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Income")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lands")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Money")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Soldiers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TurnIndex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("EntityPlayerPowers");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityProvince", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntitySoldierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EntitySoldierId");

                    b.HasIndex("GameId");

                    b.ToTable("EntityProvinces");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityProvinceAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityProvinceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntitySoldierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityProvinceId");

                    b.HasIndex("EntitySoldierId");

                    b.ToTable("EntityProvinceAction");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntitySession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SessionKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("EntitySessions");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntitySoldier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("EntitySoldier");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntitySoldierPair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntitySoldierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EntitySoldierId");

                    b.ToTable("EntitySoldierPair");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Current")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EntityGames");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityPlayer", b =>
                {
                    b.HasOne("ImperitWASM.Server.Load.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityPlayerAction", b =>
                {
                    b.HasOne("ImperitWASM.Server.Load.EntityPlayer", "EntityPlayer")
                        .WithMany("EntityPlayerActions")
                        .HasForeignKey("EntityPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityPlayer");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityPlayerPower", b =>
                {
                    b.HasOne("ImperitWASM.Server.Load.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityProvince", b =>
                {
                    b.HasOne("ImperitWASM.Server.Load.EntitySoldier", "EntitySoldier")
                        .WithMany()
                        .HasForeignKey("EntitySoldierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Server.Load.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntitySoldier");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityProvinceAction", b =>
                {
                    b.HasOne("ImperitWASM.Server.Load.EntityProvince", "EntityProvince")
                        .WithMany("EntityProvinceActions")
                        .HasForeignKey("EntityProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImperitWASM.Server.Load.EntitySoldier", "EntitySoldier")
                        .WithMany()
                        .HasForeignKey("EntitySoldierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityProvince");

                    b.Navigation("EntitySoldier");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntitySession", b =>
                {
                    b.HasOne("ImperitWASM.Server.Load.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntitySoldierPair", b =>
                {
                    b.HasOne("ImperitWASM.Server.Load.EntitySoldier", "EntitySoldier")
                        .WithMany("EntitySoldierPairs")
                        .HasForeignKey("EntitySoldierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntitySoldier");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityPlayer", b =>
                {
                    b.Navigation("EntityPlayerActions");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntityProvince", b =>
                {
                    b.Navigation("EntityProvinceActions");
                });

            modelBuilder.Entity("ImperitWASM.Server.Load.EntitySoldier", b =>
                {
                    b.Navigation("EntitySoldierPairs");
                });
#pragma warning restore 612, 618
        }
    }
}
